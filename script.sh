#!/bin/bash
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
 base_url="http://your-server/updates/"
url_pattern="KES_11_\\d{8}\\.zip"
download_dir="/home/ez/downloads"
extract_dir="/srv/antivirus"
check_interval=3600
max_backups=5
min_free_space_gb=1
log_file="/var/log/updater.log"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
notification_enabled=true
telegram_token="YOUR_BOT_TOKEN"
telegram_chat_id="YOUR_CHAT_ID"

# --- –§—É–Ω–∫—Ü–∏–∏ ---
get_free_space() {
    local path="$1"
    df -h "$path" | awk 'NR==2 {print $4}'
}

get_latest_archive() {
    log "INFO" "–ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∞—Ä—Ö–∏–≤–∞" >&2
    
    local archive_list=$(curl -s "$base_url" | grep -oP "$url_pattern" | sort -Vr | uniq)
    
    if [ -z "$archive_list" ]; then
        log "ERROR" "–ê—Ä—Ö–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" >&2
        echo ""
        return 1
    fi
    
    local archive_name=$(echo "$archive_list" | head -1)
    log "INFO" "–ù–∞–π–¥–µ–Ω –∞—Ä—Ö–∏–≤: $archive_name" >&2
    echo "${base_url}${archive_name}"
}

main() {
    check_dependencies
    init
    send_notification "üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω!"
   
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤
    if [ ! -w "$download_dir" ]; then
        log "ERROR" "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $download_dir"
        send_notification "‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ $download_dir"
        exit 1
    fi
    while true; do
        if check_free_space; then
            local archive_url=$(get_latest_archive || true)
            
            if [[ ! "$archive_url" =~ ^http[s]?://.+\.zip$ ]]; then
                log "ERROR" "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL: $archive_url"
                sleep "$check_interval"
                continue
            fi

            local file_name=$(basename "$archive_url")
            local full_path="${download_dir}/${file_name}"
            
            if [ ! -f "$full_path" ]; then
                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∞—Ä—Ö–∏–≤–µ
                send_notification "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –∞—Ä—Ö–∏–≤: $file_name"
                log "INFO" "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: $archive_url"
                
                if wget -q --tries=5 --timeout=60 -O "$full_path" "$archive_url"; then
                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
                    local file_size=$(du -h "$full_path" | cut -f1)
                    send_notification "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${file_name} (${file_size})"
                    log "INFO" "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $full_path ($file_size)"
                else
                    log "ERROR" "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏"
                    continue
                fi
            else
                log "WARN" "–ê—Ä—Ö–∏–≤ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω: $file_name"
                sleep "$check_interval"
                continue
            fi

            if unzip -tq "$full_path"; then
                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ
                local before_extract_space_dl=$(get_free_space "$download_dir")
                local before_extract_space_ex=$(get_free_space "$extract_dir")
                
                if unzip -oq "$full_path" -d "$extract_dir"; then
                    local after_extract_space_dl=$(get_free_space "$download_dir")
                    local after_extract_space_ex=$(get_free_space "$extract_dir")
                    local file_count=$(unzip -l "$full_path" | wc -l)
                    
                    send_notification "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞:
‚îú‚îÄ –§–∞–π–ª–æ–≤: ${file_count}
‚îú‚îÄ –ú–µ—Å—Ç–æ –¥–æ:
‚îÇ  ‚îú‚îÄ –ó–∞–≥—Ä—É–∑–∫–∞: ${before_extract_space_dl}
‚îÇ  ‚îî‚îÄ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞: ${before_extract_space_ex}
‚îî‚îÄ –ú–µ—Å—Ç–æ –ø–æ—Å–ª–µ:
   ‚îú‚îÄ –ó–∞–≥—Ä—É–∑–∫–∞: ${after_extract_space_dl}
   ‚îî‚îÄ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞: ${after_extract_space_ex}"
                    
                    cleanup_old_files
                else
                    log "ERROR" "–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏"
                    rm -f "$full_path"
                fi
            else
                log "ERROR" "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤"
                rm -f "$full_path"
            fi
        fi
        sleep "$check_interval"
    done
}

check_dependencies() {
    for cmd in curl wget unzip; do
        if ! command -v "$cmd" &>/dev/null; then
            echo "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $cmd"
            exit 1
        fi
    done
}

init() {
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —è–≤–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    mkdir -p "$download_dir"
    chmod 775 "$download_dir"  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
    chown ez:ez "$download_dir" 2>/dev/null || true
    
    mkdir -p "$extract_dir"
    chmod 775 "$extract_dir"
    chown ez:ez "$extract_dir" 2>/dev/null || true
    
    touch "$log_file"
    chmod 644 "$log_file"
    chown ez:ez "$log_file" 2>/dev/null || true
}

cleanup_old_files() {
    find "$download_dir" -maxdepth 1 -name "KES_11_*.zip" -printf '%T@ %p\n' | \
        sort -rn | \
        awk -v max=$max_backups 'NR > max {print $2}' | \
        xargs -r rm -f
}

log() {
    local status="$1"
    local message="$2"
    local timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    echo "[$timestamp] [$status] $message" | tee -a "$log_file"
}

send_notification() {
    local message="$1"
    log "INFO" "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $message" >&2
    
    if [ "$notification_enabled" = true ]; then
        response=$(curl -s -w "\n%{http_code}" -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"chat_id\": \"$telegram_chat_id\", \"text\": \"$message\"}" \
            "https://api.telegram.org/bot$telegram_token/sendMessage")
        
        http_code=$(echo "$response" | tail -n1)
        if [ "$http_code" -ne 200 ]; then
            log "ERROR" "–û—à–∏–±–∫–∞ Telegram API: $http_code" >&2
        fi
    fi
}

check_free_space() {
    local free_gb=$(df -B1G --output=avail "$download_dir" | tail -1 | tr -d ' ')
    
    if [ "$free_gb" -lt "$min_free_space_gb" ]; then
        send_notification "‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞: ${free_gb}GB —Å–≤–æ–±–æ–¥–Ω–æ"
        return 1
    fi
    return 0
}

trap "log 'WARN' '–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'; exit 0" SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫
main
